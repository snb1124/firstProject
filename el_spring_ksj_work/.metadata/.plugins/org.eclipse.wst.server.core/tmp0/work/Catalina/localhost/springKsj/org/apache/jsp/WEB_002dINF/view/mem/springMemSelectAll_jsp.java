/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.70
 * Generated at: 2021-11-03 12:34:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.mem;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import a.b.c.com.mem.vo.SpringMemberVO;
import a.b.c.com.common.CodeUtil;
import java.util.ArrayList;

public final class springMemSelectAll_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("a.b.c.com.mem.vo.SpringMemberVO");
    _jspx_imports_classes.add("a.b.c.com.common.CodeUtil");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>글 전체조회</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	* {\r\n");
      out.write("		margin: 0 auto;\r\n");
      out.write("		/*text-align: center;*/\r\n");
      out.write("	}\r\n");
      out.write("				\r\n");
      out.write("\r\n");
      out.write("	td, th {\r\n");
      out.write("		 padding: 5px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.tt {\r\n");
      out.write("		text-align: center;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("<script  src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	 \r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	$(document).ready(function(){	\r\n");
      out.write("		\r\n");
      out.write("		// mnumCheck 체크박스 체크 확인하기\r\n");
      out.write("		$(document).on(\"click\", \"#mnum\", function(){\r\n");
      out.write("			//alert(\"chkInSbnum >>> : \");		\r\n");
      out.write("			if($(this).prop('checked')){			 \r\n");
      out.write("				//$('input[type=\"checkbox\"][name=\"sbnum\"]').prop('checked',false);\r\n");
      out.write("				$('.mnum').prop('checked',false);\r\n");
      out.write("				$(this).prop('checked',true);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		//  I\r\n");
      out.write("		$(document).on(\"click\", \"#I\", function(){\r\n");
      out.write("			location.href=\"memForm.jin\";\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// SALL\r\n");
      out.write("		$(document).on(\"click\", \"#S\", function(){		\r\n");
      out.write("			$(\"#memSelectAllForm\").attr({\"method\":\"GET\", \"action\":\"memSelect.jin\"}).submit();		\r\n");
      out.write("		});\r\n");
      out.write("				\r\n");
      out.write("		//  U\r\n");
      out.write("		$(document).on(\"click\", \"#U\", function(){	\r\n");
      out.write("			if ($('.mnum:checked').length == 0){\r\n");
      out.write("				alert(\"수정할 글번호 하나를 선택하세요!!\");\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			$(\"#memSelectAllForm\").attr({ \"method\":\"GET\",\"action\":\"memSelect.jin\"}).submit();\r\n");
      out.write("		});\r\n");
      out.write("		//  D\r\n");
      out.write("		$(document).on(\"click\", \"#D\", function(){	\r\n");
      out.write("			if ($('.mnum:checked').length == 0){\r\n");
      out.write("				alert(\"삭제할 글번호 하나를 선택하세요!!\");\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			$(\"#memSelectAllForm\").attr({ \"method\":\"GET\", \"action\":\"memSelect.jin\"}).submit();\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("</script>	\r\n");
      out.write("</head>\r\n");
      out.write("<!-- ");
 request.setCharacterEncoding("EUC-KR");
      out.write(" --> \r\n");
      out.write("SELECT ALL\r\n");

	Object obj = request.getAttribute("listAll");
	if (obj == null) return;
	
	ArrayList<SpringMemberVO> aList = (ArrayList<SpringMemberVO>)obj;
	int nCnt = aList.size();
	out.println(":::: 전체 조회 건수  " + nCnt + " 건");	

      out.write("\r\n");
      out.write("<table>\r\n");
      out.write("<tr>\r\n");
      out.write("<td calspan=\"2\">\r\n");
      out.write("<font size=\"4\" color=\"blue\">\r\n");
      out.write("	<img src=\"/springHbe/img/img_mandu/ase.gif\" width=\"25\" height=\"25\" alter=\"image\">\r\n");
      out.write("	MEMBER TEST\r\n");
      out.write("</font>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("<hr>\r\n");
      out.write("<hr>\r\n");
      out.write("<form name=\"memSelectAllForm\" id=\"memSelectAllForm\">\r\n");
      out.write("<table border=\"1\">\r\n");
      out.write("<thead>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td class=\"tt\"><input type=\"checkbox\" name=\"chkAll\" id=\"chkAll\"></td>\r\n");
      out.write("	<td class=\"tt\">순번</td>\r\n");
      out.write("	<td class=\"tt\">회원번호</td>\r\n");
      out.write("	<td class=\"tt\">이름</td>\r\n");
      out.write("	<td class=\"tt\">아이디</td>\r\n");
      out.write("	<td class=\"tt\">성별</td>\r\n");
      out.write("	<td class=\"tt\">생년월일</td>\r\n");
      out.write("	<td class=\"tt\">핸드폰</td>\r\n");
      out.write("	<td class=\"tt\">이메일</td>\r\n");
      out.write("	<td class=\"tt\">주소</td>\r\n");
      out.write("	<td class=\"tt\">소개글</td>\r\n");
      out.write("	<td class=\"tt\">취미</td>\r\n");
      out.write("	<td class=\"tt\">사진</td>	\r\n");
      out.write("	<td class=\"tt\">수정일</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</thead>\r\n");

	String gender = "";
	String birth = "";
	String hp = "";
	String tel = "";
	String email = "";
	String addr = "";
	String hobby = "";
	
	for(int i=0; i<nCnt; i++){		
		SpringMemberVO mvo = aList.get(i);
		gender = CodeUtil.gender(mvo.getMgender());
		birth = CodeUtil.birth(mvo.getMbirth());
		hp = CodeUtil.hp(mvo.getMhp());
		addr = mvo.getMzonecode() + " " + mvo.getMroadaddress().replace("@", " " );
		hobby = CodeUtil.hobbys(mvo.getMhobby());				

      out.write("					\r\n");
      out.write("<tbody>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td class=\"tt\">\r\n");
      out.write("		<input type=\"checkbox\" id=\"mnum\" name=\"mnum\" class=\"mnum\" value=");
      out.print( mvo.getMnum() );
      out.write(" >\r\n");
      out.write("	</td>		\r\n");
      out.write("	<td class=\"tt\">");
      out.print( i + 1 );
      out.write("</td>\r\n");
      out.write("	<td class=\"tt\">");
      out.print( mvo.getMnum() );
      out.write(" </td>\r\n");
      out.write("	<td class=\"tt\">");
      out.print( mvo.getMname() );
      out.write(" </td>\r\n");
      out.write("	<td class=\"tt\">");
      out.print( mvo.getMid() );
      out.write(" </td>\r\n");
      out.write("	<td class=\"tt\">");
      out.print( gender );
      out.write(" </td>	\r\n");
      out.write("	<td class=\"tt\">");
      out.print( birth );
      out.write(" </td>\r\n");
      out.write("	<td class=\"tt\">");
      out.print( hp );
      out.write(" </td>\r\n");
      out.write("	<td class=\"tt\">");
      out.print( mvo.getMemail() );
      out.write(" </td>\r\n");
      out.write("	<td class=\"tt\">");
      out.print( addr );
      out.write("</td>\r\n");
      out.write("	<td class=\"tt\">");
      out.print( mvo.getMinfo() );
      out.write("\r\n");
      out.write("	<td class=\"tt\">");
      out.print( hobby );
      out.write("</td>\r\n");
      out.write("	<td class=\"tt\"><img src=\"/springHbe/fileupload/member/");
      out.print( mvo.getMphoto() );
      out.write(" \" border=\"1\" width=\"25\" height=\"25\" alt=\"image\"></td>	\r\n");
      out.write("	<td class=\"tt\">");
      out.print( mvo.getUpdatedate() );
      out.write(" </td>			\r\n");
      out.write("</tr>	\r\n");

	}//end of if

      out.write("						\r\n");
      out.write("<tr>\r\n");
      out.write("	<td colspan=\"20\" align=\"right\">				\r\n");
      out.write("		<input type=\"button\" value=\"등록\" id=\"I\">\r\n");
      out.write("		<input type=\"button\" value=\"조회\" id=\"S\">\r\n");
      out.write("		<input type=\"button\" value=\"수정\" id=\"U\">\r\n");
      out.write("		<input type=\"button\" value=\"삭제\" id=\"D\">									\r\n");
      out.write("	</td>\r\n");
      out.write("</tr>	\r\n");
      out.write("</tbody>			\r\n");
      out.write("</table>\r\n");
      out.write("</form>		\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
