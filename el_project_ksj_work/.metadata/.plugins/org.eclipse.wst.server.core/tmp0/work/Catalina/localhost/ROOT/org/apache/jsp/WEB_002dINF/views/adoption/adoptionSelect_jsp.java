/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.70
 * Generated at: 2021-12-11 07:41:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.adoption;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.catchdog.adoption.vo.AdoptionVO;
import java.util.List;
import com.catchdog.common.CodeUtil;

public final class adoptionSelect_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.catchdog.adoption.vo.AdoptionVO");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.catchdog.common.CodeUtil");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta charset=\"UTF-8\">\r\n");
      out.write("		<title>입양 신청 정보 확인</title>\r\n");
      out.write("		<style type=\"text/css\">\r\n");
      out.write("			table, tr, td, input, textarea{text-align:center;}\r\n");
      out.write("		</style>\r\n");
      out.write("	</head>\r\n");
      out.write("	<body>\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/header.jsp", out, true);
      out.write("\r\n");
      out.write("		");

			Object obj = request.getAttribute("listSel");
			List<AdoptionVO> listSel = null;
			AdoptionVO avo = null;
			if(obj != null){
				listSel = (List<AdoptionVO>)obj;
				if(listSel != null){
					System.out.println("SelectJSP listSel.size >>> : " + listSel.size());
					avo = listSel.get(0);
				}
			}
			
			System.out.println("SelectJSP avo >>> : " + avo);
			if(avo == null){
				avo = new AdoptionVO();
			}
			System.out.println("SelectJSP iamge >>> : " + avo.getAimage());
		
      out.write("\r\n");
      out.write("		<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("		<script type=\"text/javascript\">\r\n");
      out.write("			$(document).ready(function(){\r\n");
      out.write("				$(\"#adoptionBtn\").click(function(){\r\n");
      out.write("					let mnum = ");
      out.print( avo.getMnum() );
      out.write(";\r\n");
      out.write("					alert(\"입양신청 완료\")\r\n");
      out.write("					if(mnum == null){\r\n");
      out.write("						\r\n");
      out.write("					}else{\r\n");
      out.write("						\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("			});\r\n");
      out.write("		</script>\r\n");
      out.write("		<form id=\"adoptionSelectForm\" name=\"adoptionSelectForm\">\r\n");
      out.write("			<table>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td rowspan=\"7\">\r\n");
      out.write("						<img src='");
      out.print( avo.getAimage() );
      out.write("' width=\"300\" height=\"300\"\r\n");
      out.write("						onerror=\"this.src='image/image-available.jpg'\">\r\n");
      out.write("					</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						이름 : <input type=\"text\" id=\"aname\" name=\"aname\" value=\"");
      out.print( CodeUtil.aname(avo.getAname()) );
      out.write("\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>\r\n");
      out.write("						종 : <input type=\"text\" id=\"akind\" name=\"akind\" value=\"");
      out.print( CodeUtil.akind(avo.getAkind()) );
      out.write("\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>\r\n");
      out.write("						나이 : <input type=\"text\" id=\"aage\" name=\"aage\" value=\"");
      out.print( CodeUtil.aage(avo.getAage()) );
      out.write("\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					");

						String clr = CodeUtil.acolors(avo.getAcolor());
						if(clr.charAt(clr.length()-1) == ',') clr = clr.subSequence(0, clr.length()-1).toString();
					
      out.write("\r\n");
      out.write("					<td>\r\n");
      out.write("						색 : <input type=\"text\" id=\"acolor\" name=\"acolor\" value=\"");
      out.print( clr );
      out.write("\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					");

						String[] individual = CodeUtil.aindividuality(avo);
						System.out.println("individual >>> : " + individual[0] + ", " + individual[1]);
						String indiv = "";
						if(individual[1] == null || individual[1].equals("")) indiv = individual[0];
						else	indiv = individual[0] + ", " + individual[1];
					
      out.write("\r\n");
      out.write("					<td>\r\n");
      out.write("						종특 및 무게 : <input type=\"text\" id=\"aindividual\" name=\"aindividual\" value=\"");
      out.print( indiv );
      out.write("\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>\r\n");
      out.write("						성별 : <input type=\"text\" id=\"agender\" name=\"agender\" value=\"");
      out.print( CodeUtil.agender(avo.getAgender()) );
      out.write("\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>\r\n");
      out.write("						중성화여부 : <input type=\"text\" id=\"aneut\" name=\"aneut\" value=\"");
      out.print( CodeUtil.aneut(avo.getAneut()) );
      out.write("\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"2\">\r\n");
      out.write("						<script src=\"http://code.jquery.com/jquery-latest.min.js\">\r\n");
      out.write("							let specialSize = '");
      out.print( avo.getAspecial().length() );
      out.write("';\r\n");
      out.write("						</script>\r\n");
      out.write("						<p style=\"margin-top: 30px;\">특이사항 :</p><textarea id=\"aspecial\" name=\"aspecial\">");
      out.print( avo.getAspecial() );
      out.write("</textarea>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"2\">\r\n");
      out.write("						<input type=\"button\" id=\"adoptionBtn\" name=\"adoptionBtn\" value=\"입양상담신청\" style=\"margin-top: 10px;\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
